<project name="Application" xmlns:ivy="antlib:org.apache.ivy.ant" default="all" basedir=".">

    <property file="build.properties" />
    <ivy:settings file="${ivy.settings}" />

    <import file="build_mains.xml" />
    
    <target name="noop">
        <echo message="noop" />
    </target>

    <target name="all" depends="clean,jar,junit" />

    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>


    <path id="classpath">
        <pathelement path="." />
        <fileset dir="${lib}">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="test-classpath">
        <pathelement path="${src.classes}" />
        <pathelement path="${test.classes}" />
        <fileset dir="${lib}">
            <include name="*.jar" />
        </fileset>
        <pathelement location="." />
    </path>

    <target name="clean">
        <delete dir="${repository.dir}" />
        <delete dir="${build}"/>
        <delete dir="${lib}"/>
        <delete dir="${dist}"/>
        <delete dir="${ivy.reports}"/>
        <delete dir="${junit.reports.dir}"/>
       
        <mkdir dir="${lib}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${build}"/>
    </target>

    <target name="resolve" depends="clean" description="--> retrieve dependencies with ivy">
        <ivy:retrieve type="jar,bundle" pattern="${lib}/[artifact]-[revision].[ext]" />
    </target>

    <target name="check-jdbc-url" unless="jdbc.connection.string">
        <fail message="Error: jdbc.connection.string is required.${line.separator}Example: ant ${ant.project.invoked-targets} -Djdbc.connection.string=&quot;jdbc:mysql://localhost:3306/mysql?user=root&amp;password=password&amp;useSSL=false&quot;" />
    </target>

    <target name="init-db" depends="compile,check-jdbc-url" description="Init database">
        <java classname="common.InitDatabase"
              fork="true"
              classpathref="test-classpath">
            <jvmarg value="-DJDBC_CONNECTION_STRING=${jdbc.connection.string}"/>
        </java>
    </target>

    <target name="compile">
        <echo>Lib is ${lib}</echo>
        <mkdir dir="${src.classes}"/>
        <javac
            target="${target.java.version}"
            srcdir="${src.src}"
            destdir="${src.classes}"
            classpathref="classpath" debug="on"/>
        <copy todir="${src.classes}">
            <fileset dir="${src.src}">
                <include name="**/*.xsl" />
                <include name="**/*.gif" />
                <include name="**/*.jpg" />
                <include name="**/*.properties" />
                <include name="**/*.txt" />
                <include name="**/*.des3" />
            </fileset>
        </copy>    

        <mkdir dir="${test.classes}"/>
        <javac
            target="${target.java.version}"
            srcdir="${test.src}"
            destdir="${test.classes}"
            classpathref="test-classpath" debug="on"/>
        <copy todir="${test.classes}">
            <fileset dir="${test.src}">
                <include name="**/*.xsl" />
                <include name="**/*.gif" />
                <include name="**/*.jpg" />
                <include name="**/*.properties" />
            </fileset>
        </copy>    
    </target>

    <target name="jar" depends="compile">
        <jar
            jarfile="${dist}/${ivy.module}.jar">
            <fileset dir="${src.classes}" /> <!--  excludes="**/*.java"/> -->
        </jar>
    </target>

    <target name="install" depends="clean,resolve,compile,jar" description="Install to local repo">
        <ivy:publish resolver="local-cache" artifactspattern="${dist}/[artifact].[ext]"
                     pubrevision="${next.version}"
                     status="release"
                     overwrite="true" /> 
    </target>

    <target name="ivy.report" depends="resolve" description="generates a report of dependencies">
        <delete dir="${ivy.reports}"/>
        <mkdir dir="${ivy.reports}"/>

        <ivy:report todir="${ivy.reports}" />
    </target>

    <target name="ensure-test-name" unless="test">
        <fail message="You must run this target with -Dtest=TestName"/>
    </target>

    <target name="runtest" description="Runs the test you specify on the command 
    line with -Dtest=" depends="compile, ensure-test-name">
        <junit tempdir="${scratch.dir}" printsummary="withOutAndErr" fork="yes" failureproperty="testsFailed"> 
            <classpath>
                <pathelement location="${src.classes}" />
                <pathelement location="${test.classes}" />
                <fileset dir="${lib}">
                    <include name="*.jar" />
                </fileset>

            </classpath>
            <formatter type="plain" usefile="false"/>
            <batchtest>
                <fileset dir="${test.classes}">
                    <include name="**/${test}.class"/>
                </fileset>
            </batchtest>
        </junit>
        <fail if="${testsFailed}" message="Some of the unit tests failed." />
    </target>

    <target name="junit" depends="compile">
        <delete dir="${junit.reports.dir}"/>
        <mkdir dir="${junit.reports.dir}"/>
        <junit tempdir="${scratch.dir}" printsummary="yes" fork="true" haltonfailure="yes" showoutput="true">
            <classpath>
                <pathelement location="${src.classes}" />
                <pathelement location="${test.classes}" />
                <fileset dir="${lib}">
                    <include name="*.jar" />
                </fileset>

            </classpath>

            <formatter type="plain" usefile="false" />
            <formatter type="xml" />
            <batchtest fork="yes" todir="${junit.reports.dir}">
                <fileset dir="${test.classes}">
                    <include name="**/*class" />
                </fileset>               
            </batchtest>
        </junit>
    </target>

    <target name="clean-cache" description="clean the ivy cache">
        <ivy:cleancache />
    </target>

    <path id="exec-classpath">
        <fileset dir="${lib}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${dist}">
            <include name="*.jar" />
        </fileset>
    </path>

</project>
